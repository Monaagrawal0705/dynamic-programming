#include<iostream>
using namespace std; 
struct Item 
{ 
    int value, weight; 
    
}; 
bool cmp( Item a,  Item b) 
{ 
    double r1 = (double)a.value / a.weight; 
    double r2 = (double)b.value / b.weight; 
    return r1 > r2; 
} 
double fractionalKnapsack(int W,Item arr[], int n) 
{ 
    sort(arr, arr + n, cmp);
    int curWeight = 0;  
    double finalvalue = 0.0; 
    for (int i = 0; i < n; i++) 
    { 
        if (curWeight + arr[i].weight <= W) 
        { 
            curWeight += arr[i].weight; 
            finalvalue += arr[i].value; 
        } 
        else
        { 
            int remain = W - curWeight; 
            finalvalue += arr[i].value * ((double) remain / arr[i].weight); 
            break; 
        } 
    } 
    return finalvalue; 
} 
int main(){
    int t;
    cin>>t;
    while(t--){
        int n,W; 
        cin>>n>>W;
        Item arr[n];
        for(int i=0;i<n;i++){
            cin>>arr[i].value;
            cin>>arr[i].weight;
        }
                  std::cout << std::fixed;

          std::cout << std::setprecision(2) << fractionalKnapsack(W,arr ,n);
          cout<<endl;
    }
    return 0;
}
